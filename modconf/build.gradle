plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id "de.undercouch.download" version "5.6.0"
}

def ID = "mmrl_wpd"
def TARGET_PACKAGE = "com.dergoogler.mmrl.debug"

android {
    namespace = "com.dergoogler.modconf.$ID"
    compileSdk = 34

    defaultConfig {
        minSdk = 21
        targetSdk = 34

        multiDexEnabled false
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }

    buildFeatures {
        compose = true
    }


    composeOptions {
        kotlinCompilerExtensionVersion = '1.5.15'
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation "androidx.compose.ui:ui:1.7.0-beta01"
    implementation "androidx.compose.material3:material3:1.2.1"
    implementation "androidx.compose.ui:ui-tooling-preview:1.7.2"
    implementation "androidx.compose.runtime:runtime-livedata:1.7.2"
    implementation "com.github.topjohnwu.libsu:core:5.2.1"
    implementation "com.github.topjohnwu.libsu:io:5.2.1"
}


def ANDROID_HOME = System.getenv("ANDROID_HOME")
def appId = providers.exec {
    commandLine("$ANDROID_HOME\\platform-tools\\adb.exe", "shell", "pm list packages -U | grep $TARGET_PACKAGE | cut -f 3 -d \":\"")
}.standardOutput.asText.get().toString().trim()

tasks.register('unzip', Copy) {
    dependsOn assembleRelease
    from zipTree("build/outputs/aar/modconf-release.aar")
    into "$buildDir/extracted"
}

tasks.register('buildDex', Exec) {
    dependsOn unzip
    commandLine "$ANDROID_HOME\\build-tools\\34.0.0\\d8.bat", '--output=build', "$buildDir\\extracted\\classes.jar"
}

tasks.register('pushDex', Exec) {
    dependsOn buildDex
    commandLine "$ANDROID_HOME\\platform-tools\\adb.exe", "push", "$buildDir\\classes.dex", "/data/local/tmp/${ID}.dex"
}

tasks.register('moveDex', Exec) {
    dependsOn pushDex
    commandLine "$ANDROID_HOME\\platform-tools\\adb.exe", "shell", "su", "-c \"mv -f /data/local/tmp/${ID}.dex /data/data/$TARGET_PACKAGE/files/${ID}.dex\""
}

tasks.register('push', Exec) {
    dependsOn moveDex
    commandLine "$ANDROID_HOME\\platform-tools\\adb.exe", "shell", "su", "-c \"chown $appId:$appId /data/data/$TARGET_PACKAGE/files/${ID}.dex\""
}
